package drill06.prob10;

import java.util.Scanner;
/**
문제10. 버블 정렬을 이용한 내림차순 정렬
문제 설명: 버블 정렬 알고리즘을 구현하여 정수를 내림차순으로 정렬하시오
다음과 같은 정수 배열이 주어졌을 때, 버블 정렬 알고리즘을 사용하여 배열을 내림차순 으로 정렬하는 프로그램을 작성하시오.
주어진 배열:
int[] data = {5, 9, 3, 8, 60, 20, 1};
​
정렬 조건:
정렬 방식: 내림차순 (큰 수 → 작은 수)
정렬 알고리즘: 버블 정렬을 직접 구현할 것
Arrays.sort() 등 내장 메서드 사용 금지
힌트
버블 정렬은 인접한 두 원소를 비교해가며, 조건에 따라 자리를 swap 해나가는 정렬 방식입니다.
바깥쪽 반복문은 총 n - 1회, 안쪽 반복문은 n - i - 1까지 수행
초기값
[5, 9, 3, 8, 60, 20, 1]

1회
[9, 5, 3, 8, 60, 20, 1] : 5, 9 바꾼다
[9, 5, 3, 8, 60, 20, 1] : 5, 3 제자리
[9, 5, 8, 3, 60, 20, 1] : 3, 8 바꾼다
[9, 5, 8, 60, 3, 20, 1] : 3, 60 바꾼다
[9, 5, 8, 60, 20, 3, 1] : 3, 20 바꾼다
[9, 5, 8, 60, 20, 3, 1] : 3, 1 제자리

2회
[9, 5, 8, 60, 20, 3, 1] : 9, 5 제자리
[9, 8, 5, 60, 20, 3, 1] : 5, 8 바꾼다
[9, 8, 60, 5, 20, 3, 1] : 5, 60 바꾼다
[9, 8, 60, 20, 5, 3, 1] : 5, 20 바꾼다
[9, 8, 60, 20, 5, 3, 1] : 5, 3 제자리

3회
[9, 8, 60, 20, 5, 3, 1] : 9, 8 제자리
[9, 60, 8, 20, 5, 3, 1] : 8, 60 바꾼다
[9, 60, 20, 8, 5, 3, 1] : 8, 20 바꾼다
[9, 60, 20, 8, 5, 3, 1] : 8, 5 제자리

4회
[60, 9, 20, 8, 5, 3, 1] : 9, 60 바꾼다
[60, 20, 9, 8, 5, 3, 1] : 9, 20 바꾼다
[60, 20, 9, 8, 5, 3, 1] : 9, 8 제자리

5회
[60, 20, 9, 8, 5, 3, 1] : 60, 20 제자리
[60, 20, 9, 8, 5, 3, 1] : 20, 9 제자리

6회: 마지막
[60, 20, 9, 8, 5, 3, 1] : 60, 20 제자리
*/
public class Sol {
	public static void main(String[] args) {
        int[] data = {5, 9, 3, 8, 60, 20, 1};

        System.out.println("초기값: " + Arrays.toString(data));

        int n = data.length;
        for (int i = 0; i < n - 1; i++) {
            for (int j = 0; j < n - 1 - i; j++) {
                // 내림차순 → 앞의 값이 뒤보다 작으면 swap
                if (data[j] < data[j + 1]) {
                    int a = data[j];
                    data[j] = data[j + 1];
                    data[j + 1] = a;
                }
            }
            System.out.println((i + 1) + "회: " + Arrays.toString(data));
        }

        System.out.println("최종 정렬: " + Arrays.toString(data));
    }
}